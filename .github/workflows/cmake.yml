name: CMake
run-name: ${{ github.actor }} is building with Github Actions üöÄ
on:
  - push
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main

env:
  # CMake build type (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  # Explore-GitHub-Actions:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
  #     - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
  #     - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
  #     - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
  #     - name: List files in the repository
  #       run: |
  #         ls ${{ github.workspace }}
  #     - run: echo "üçè This job's status is ${{ job.status }}."

  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Upload built executable
        uses: actions/upload-artifact@v3
        with:
          name: mywc
          path: ${{github.workspace}}/build/src/mywc

    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   # Execute tests defined by the CMake configuration.
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest -C ${{env.BUILD_TYPE}}

  release:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download built artifact
        uses: actions/download-artifact@v3
        with:
          name: mywc

      - run: ls -laF
